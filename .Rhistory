boxsize=boxsize_forestplot(data),
col=fpColors(box=nice_colors()$bysex,lines="black",zero="grey"),
#hrzl_lines=list("2" = gpar(lwd=0.3, columns=1:5),
xlab="Beta estimates",
new_page=F,
xticks.digits=5,
ci.vertices=T,
ci.vertices.height=.05,
align="c",
title=titre,
fn.ci_norm=fpDrawNormalCI,
lwd.ci=1.5,
graph.pos= "right",
graphwidth=unit(1.5, "inches"),
colgap=unit(0.02,"inches"),
lineheigth=unit(0.20, "inches"),
line.margin=unit(0.20,"inches"),
cex=5,
mar=unit(rep(2, times = 4), "mm"))
}
forestplot_sex(data,c("example n°1","example n°2"),"Example")
library(monpackage)
data<-as.data.frame(c("all","girls","all","girls","boys","boys"))
colnames(data)<-"pop"
data$Pvalue<-c(0.05,0.02,0.1,0.001,0.8,0.05)
data$Estimate<-c(1.1,1.2,2.3,1.26,1.01,1.1)
data$LowerCL<-c(1.05,1.15,0.9,1.20,0.6,1.05)
data$UpperCL<-c(1.15,1.25,3.1,1.30,1.6,1.15)
data$CI<-c("[1.05,1.15]","[1.15;1.25]","[0.9;3.1]","[1.20;1.30]","[0.6;1.6]","[1.05,1.15]")
forestplot_sex(data,c("example n°1","example n°2"),"Example")
?forestplot_sex
library(monpackage)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE,
comment = "#>")
library(monpackage)
data<-as.data.frame(c("all","girls","all","girls","boys","boys"))
colnames(data)<-"pop"
data$Pvalue<-c(0.05,0.02,0.1,0.001,0.8,0.05)
data$Estimate<-c(1.1,1.2,2.3,1.26,1.01,1.1)
data$LowerCL<-c(1.05,1.15,0.9,1.20,0.6,1.05)
data$UpperCL<-c(1.15,1.25,3.1,1.30,1.6,1.15)
data$CI<-c("[1.05,1.15]","[1.15;1.25]","[0.9;3.1]","[1.20;1.30]","[0.6;1.6]","[1.05,1.15]")
forestplot_sex(data,c("example n°1","example n°2"),"Example")
data<-as.data.frame(c("all","girls","all","girls","boys","boys"))
colnames(data)<-"pop"
data$Pvalue<-c(0.05,0.02,0.1,0.001,0.8,0.05)
data$Estimate<-c(1.1,1.2,2.3,1.26,1.01,1.1)
data$LowerCL<-c(1.05,1.15,0.9,1.20,0.6,1.05)
data$UpperCL<-c(1.15,1.25,3.1,1.30,1.6,1.15)
data$CI<-c("[1.05,1.15]","[1.15;1.25]","[0.9;3.1]","[1.20;1.30]","[0.6;1.6]","[1.05,1.15]")
forestplot_sex(data,c("example n°1","example n°2"),"Example")
data
exposure=c("example n°1","example n°2")
All<-data[as.character(data$pop)=="all",]
Boys<-data[as.character(data$pop)=="boys",]
Girls<-data[as.character(data$pop)=="girls",]
gp<-gpar(col="grey", fill="white")
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL),
labeltext=text_forestplot(data,exposure),
txt_gp = fpTxtGp(label = gpar(cex=0.4)),
legend=c("All", "Boys","Girls"),
legend_args=fpLegend(pos = "top", r = unit(.2, "npc"), title = NULL),
clip=c(-1, 1),
xticks=c(-1,-0.5,0,0.5,1),
boxsize=boxsize_forestplot(data),
col=fpColors(box=nice_colors()$bysex,lines="black",zero="grey"),
#hrzl_lines=list("2" = gpar(lwd=0.3, columns=1:5),
xlab="Beta estimates",
new_page=F,
xticks.digits=5,
ci.vertices=T,
ci.vertices.height=.05,
align="c",
title=titre,
fn.ci_norm=fpDrawNormalCI,
lwd.ci=1.5,
graph.pos= "right",
graphwidth=unit(1.5, "inches"),
colgap=unit(0.02,"inches"),
lineheigth=unit(0.20, "inches"),
line.margin=unit(0.20,"inches"),
cex=5,
mar=unit(rep(2, times = 4), "mm"))
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL),
labeltext=text_forestplot(data,exposure),
txt_gp = fpTxtGp(label = gpar(cex=0.4)),
legend=c("All", "Boys","Girls"),
legend_args=fpLegend(pos = "top", r = unit(.2, "npc"), title = NULL),
clip=c(-1, 1),
xticks=c(-1,-0.5,0,0.5,1),
boxsize=boxsize_forestplot(data),
col=fpColors(box=nice_colors()$bysex,lines="black",zero="grey"),
#hrzl_lines=list("2" = gpar(lwd=0.3, columns=1:5),
xlab="Beta estimates"
forestplot_sex<-function (data,exposure,titre){
All<-data[as.character(data$pop)=="all",]
Boys<-data[as.character(data$pop)=="boys",]
Girls<-data[as.character(data$pop)=="girls",]
gp<-gpar(col="grey", fill="white")
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL),
labeltext=text_forestplot(data,exposure),
txt_gp = fpTxtGp(label = gpar(cex=0.4)),
legend=c("All", "Boys","Girls"),
legend_args=fpLegend(pos = "top", r = unit(.2, "npc"), title = NULL),
clip=c(-1, 1),
xticks=c(-1,-0.5,0,0.5,1),
boxsize=boxsize_forestplot(data),
col=fpColors(box=nice_colors()$bysex,lines="black",zero="grey"),
#hrzl_lines=list("2" = gpar(lwd=0.3, columns=1:5),
xlab="Beta estimates",
new_page=F,
xticks.digits=5,
ci.vertices=T,
ci.vertices.height=.05,
align="c",
title=titre,
fn.ci_norm=fpDrawNormalCI,
lwd.ci=1.5,
graph.pos= "right",
graphwidth=unit(1.5, "inches"),
colgap=unit(0.02,"inches"),
lineheigth=unit(0.20, "inches"),
line.margin=unit(0.20,"inches"),
cex=5,
mar=unit(rep(2, times = 4), "mm"))
}
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL)
}
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL),
labeltext=text_forestplot(data,exposure),
txt_gp = fpTxtGp(label = gpar(cex=0.4)),
legend=c("All", "Boys","Girls"),
legend_args=fpLegend(pos = "top", r = unit(.2, "npc"), title = NULL),
clip=c(-1, 1),
xticks=c(-1,-0.5,0,0.5,1),
boxsize=boxsize_forestplot(data),
col=fpColors(box=nice_colors()$bysex,lines="black",zero="grey")
)
}
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL),
labeltext=text_forestplot(data,exposure),
txt_gp = fpTxtGp(label = gpar(cex=0.4)),
legend=c("All", "Boys","Girls"),
legend_args=fpLegend(pos = "top", r = unit(.2, "npc"), title = NULL),
clip=c(-1, 1),
xticks=c(-1,-0.5,0,0.5,1),
boxsize=boxsize_forestplot(data),
col=fpColors(box=nice_colors()$bysex,lines="black",zero="grey"),
#hrzl_lines=list("2" = gpar(lwd=0.3, columns=1:5),
xlab="Beta estimates",
new_page=F,
xticks.digits=5,
ci.vertices=T,
ci.vertices.height=.05,
align="c",
title=titre,
fn.ci_norm=fpDrawNormalCI,
lwd.ci=1.5,
graph.pos= "right",
graphwidth=unit(1.5, "inches"),
colgap=unit(0.02,"inches"),
lineheigth=unit(0.20, "inches"),
line.margin=unit(0.20,"inches"),
cex=5,
mar=unit(rep(2, times = 4), "mm"))
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL),
labeltext=text_forestplot(data,exposure),
txt_gp = fpTxtGp(label = gpar(cex=0.4)),
legend=c("All", "Boys","Girls"),
legend_args=fpLegend(pos = "top", r = unit(.2, "npc"), title = NULL),
clip=c(-1, 1),
xticks=c(-1,-0.5,0,0.5,1),
boxsize=boxsize_forestplot(data)
)
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL),
labeltext=text_forestplot(data,exposure),
txt_gp = fpTxtGp(label = gpar(cex=0.4)),
legend=c("All", "Boys","Girls"),
legend_args=fpLegend(pos = "top", r = unit(.2, "npc"), title = NULL),
clip=c(-1, 1),
xticks=c(-1,-0.5,0,0.5,1),
boxsize=boxsize_forestplot(data),
col=fpColors(box=nice_colors()$bysex,lines="black",zero="grey"),
#hrzl_lines=list("2" = gpar(lwd=0.3, columns=1:5),
xlab="Beta estimates",
new_page=F,
xticks.digits=5,
ci.vertices=T,
ci.vertices.height=.05,
align="c"
)
gp
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL),
labeltext=text_forestplot(data,exposure),
txt_gp = fpTxtGp(label = gpar(cex=0.4)),
legend=c("All", "Boys","Girls"),
legend_args=fpLegend(pos = "top", r = unit(.2, "npc"), title = NULL),
clip=c(-1, 1),
xticks=c(-1,-0.5,0,0.5,1),
boxsize=boxsize_forestplot(data),
col=fpColors(box=nice_colors()$bysex,lines="black",zero="grey"),
#hrzl_lines=list("2" = gpar(lwd=0.3, columns=1:5),
xlab="Beta estimates",
new_page=F,
xticks.digits=5,
ci.vertices=T,
ci.vertices.height=.05,
align="c",
title=titre,
fn.ci_norm=fpDrawNormalCI,
lwd.ci=1.5,
graph.pos= "right"
)
titre="example"
forestplot(mean=cbind(All$Estimate, Boys$Estimate, Girls$Estimate),
lower=cbind(All$LowerCL, Boys$LowerCL, Girls$LowerCL),
upper=cbind(All$UpperCL, Boys$UpperCL, Girls$UpperCL),
labeltext=text_forestplot(data,exposure),
txt_gp = fpTxtGp(label = gpar(cex=0.4)),
legend=c("All", "Boys","Girls"),
legend_args=fpLegend(pos = "top", r = unit(.2, "npc"), title = NULL),
clip=c(-1, 1),
xticks=c(-1,-0.5,0,0.5,1),
boxsize=boxsize_forestplot(data),
col=fpColors(box=nice_colors()$bysex,lines="black",zero="grey"),
#hrzl_lines=list("2" = gpar(lwd=0.3, columns=1:5),
xlab="Beta estimates",
new_page=F,
xticks.digits=5,
ci.vertices=T,
ci.vertices.height=.05,
align="c",
title=titre,
fn.ci_norm=fpDrawNormalCI,
lwd.ci=1.5,
graph.pos= "right",
graphwidth=unit(1.5, "inches"),
colgap=unit(0.02,"inches"),
lineheigth=unit(0.20, "inches"),
line.margin=unit(0.20,"inches"),
cex=5,
mar=unit(rep(2, times = 4), "mm"))
library(monpackage)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE,
comment = "#>")
library(monpackage)
data<-as.data.frame(c("all","girls","all","girls","boys","boys"))
colnames(data)<-"pop"
data$Pvalue<-c(0.05,0.02,0.1,0.001,0.8,0.05)
data$Estimate<-c(1.1,1.2,2.3,1.26,1.01,1.1)
data$LowerCL<-c(1.05,1.15,0.9,1.20,0.6,1.05)
data$UpperCL<-c(1.15,1.25,3.1,1.30,1.6,1.15)
data$CI<-c("[1.05,1.15]","[1.15;1.25]","[0.9;3.1]","[1.20;1.30]","[0.6;1.6]","[1.05,1.15]")
forestplot_sex(data,c("example n°1","example n°2"),"Example")
forestplot_sex(data,c("example n°1","example n°2"),"Example")
library(monpackage)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE,
comment = "#>")
library(monpackage)
data<-as.data.frame(c("all","girls","all","girls","boys","boys"))
colnames(data)<-"pop"
data$Pvalue<-c(0.05,0.02,0.1,0.001,0.8,0.05)
data$Estimate<-c(1.1,1.2,2.3,1.26,1.01,1.1)
data$LowerCL<-c(1.05,1.15,0.9,1.20,0.6,1.05)
data$UpperCL<-c(1.15,1.25,3.1,1.30,1.6,1.15)
data$CI<-c("[1.05,1.15]","[1.15;1.25]","[0.9;3.1]","[1.20;1.30]","[0.6;1.6]","[1.05,1.15]")
forestplot_sex(data,c("example n°1","example n°2"),"Example")
forestplot_sex(data,c("example n°1","example n°2"),"Example")
?`forestplot-package`
?forestplot_sex
knitr::opts_chunk$set(
message = TRUE,
warning = TRUE,
collapse = TRUE,
comment = "#>"
)
data<-as.data.frame(c("all","girls","all","girls","boys","boys"))
colnames(data)<-"pop"
data$Pvalue<-c(0.05,0.02,0.1,0.001,0.8,0.05)
data$Estimate<-c(1.1,1.2,2.3,1.26,1.01,1.1)
data$LowerCL<-c(1.05,1.15,0.9,1.20,0.6,1.05)
data$UpperCL<-c(1.15,1.25,3.1,1.30,1.6,1.15)
data$CI<-c("[1.05,1.15]","[1.15;1.25]","[0.9;3.1]","[1.20;1.30]","[0.6;1.6]","[1.05,1.15]")
forestplot_sex(data,c("example n°1","example n°2"),"Example")
forestplot_sex(data,c("example n°1","example n°2"),"Example")
#' Tercile
#' Categorize a continuous variable among terciles
#' We registered cases id and control population ids,
#'
#' @param data A continuous variable
#' @param na Boolean, omit (T) or not (F) missing values
#'
#' @return data_cl, factor with 3 levels
#' @export
tercile<-function (data,na=F){
quant<-quantile(data, probs = seq(0, 1, 1/3), na.rm = na)
print(quant)
data_cl<-0
data_cl[data<quant[2]]<-1
data_cl[data>=quant[2] & data<quant[3]]<-2
data_cl[data>=quant[3]]<-3
return(data_cl)
}
tercile(c(112,15,18,15,415,41,5,4,44,51,51,2,65,4,8,5,5,8,45,489))
library(monpackage)
?tercile
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE,
comment = "#>")
library(monpackage)
knitr::opts_chunk$set(
message = TRUE,
warning = TRUE,
collapse = TRUE,
comment = "#>"
)
#' Mode calculation
#' Calculate the mode of a categorical variable
#'
#' @param v Factor
#'
#' @export
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode (c(112,15,18,15,415,41,5,4,44,51,51,2,65,4,8,5,5,8,45,489))
library(monpackage)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE,
comment = "#>")
library(monpackage)
data<-as.data.frame(c(1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1))
colnames(data)<-"hyperactivity"
data$sex<-c(1,1,2,1,1,2,1,1,1,1,1,2,2,2,1,1,1,1,2,1)
data$id<-seq(0,length(data$hyperactivity,1))
data$id<-seq(0,length(data$hyperactivity),1)
data<-as.data.frame(c(1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1))
colnames(data)<-"hyperactivity"
data$sex<-c(1,1,2,1,1,2,1,1,1,1,1,2,2,2,1,1,1,1,2,1)
data$id<-seq(0,length(data$hyperactivity),1)
data$id<-seq(0,length(data$hyperactivity))
seq(0,length(data$hyperactivity))
data$sex
data
data<-as.data.frame(c(1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1))
colnames(data)<-"hyperactivity"
data$sex<-c(1,1,2,1,1,2,1,1,1,1,1,2,2,2,1,1,1,1,2,1)
data$id<-seq(1,length(data$hyperactivity))
data
knitr::opts_chunk$set(
message = TRUE,
warning = TRUE,
collapse = TRUE,
comment = "#>"
)
#' CC pairs
#' Appairing cases and controls
#' We registered case and control population ids. Then we sample without replacement controls.
#'
#' @param data Dataframe with variables for cases and controls
#' @param case_cond Variable distinging cases from controls
#' @param cond Appairing variable
#' @param valeur_cond Value of the apparing variable
#' @param nb_temoins Number of controls for one case
#' @param id Identifiers
#'
#' @export
appariement_cond<-function(data,case_cond, cond,valeur_cond,nb_temoins,id){
case<-data[(!is.na(case_cond) & case_cond==1 & cond==valeur_cond),id]
pop<-data[(!is.na(case_cond) & case_cond==0 & cond==valeur_cond),id]
control<-NA
for (i in 1:length(case)){
Usample<-sample(pop,nb_temoins,replace=F)
if (i==1){
control<-Usample
}else{
control<-c(control,Usample)
}
j<-1
for (j in 1:nb_temoins){
pop<-pop[(pop != Usample[j])]
}
}
return(control)
}
data<-as.data.frame(c(1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1))
colnames(data)<-"hyperactivity"
data$sex<-c(1,1,2,1,1,2,1,1,1,1,1,2,2,2,1,1,1,1,2,1)
data$id<-seq(1,length(data$hyperactivity))
appariement_cond(data,data$hyperactivity,data$sex,1,2,data$id)
knitr::opts_chunk$set(
message = TRUE,
warning = TRUE,
collapse = TRUE,
comment = "#>"
)
#' CC pairs
#' Appairing cases and controls
#' We registered case and control population ids. Then we sample without replacement controls.
#'
#' @param data Dataframe with variables for cases and controls
#' @param case_cond Variable distinging cases from controls
#' @param cond Appairing variable
#' @param valeur_cond Value of the apparing variable
#' @param nb_temoins Number of controls for one case
#' @param id Identifiers
#'
#' @export
appariement_cond<-function(data,case_cond, cond,valeur_cond,nb_temoins,id){
case<-data[(!is.na(case_cond) & case_cond==1 & cond==valeur_cond),id]
pop<-data[(!is.na(case_cond) & case_cond==0 & cond==valeur_cond),id]
control<-NA
for (i in 1:length(case)){
Usample<-sample(pop,nb_temoins,replace=F)
if (i==1){
control<-Usample
}else{
control<-c(control,Usample)
}
j<-1
for (j in 1:nb_temoins){
pop<-pop[(pop != Usample[j])]
}
}
return(control)
}
data<-as.data.frame(c(1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1))
colnames(data)<-"hyperactivity"
data$sex<-c(1,1,2,1,1,2,1,1,1,1,1,2,2,2,1,1,1,1,2,1)
data$id<-seq(1,length(data$hyperactivity))
appariement_cond(data,data$hyperactivity,data$sex,1,2,"id)
knitr::opts_chunk$set(
message = TRUE,
warning = TRUE,
collapse = TRUE,
comment = "#>"
)
#' CC pairs
#' Appairing cases and controls
#' We registered case and control population ids. Then we sample without replacement controls.
#'
#' @param data Dataframe with variables for cases and controls
#' @param case_cond Variable distinging cases from controls
#' @param cond Appairing variable
#' @param valeur_cond Value of the apparing variable
#' @param nb_temoins Number of controls for one case
#' @param id Identifiers
#'
#' @export
appariement_cond<-function(data,case_cond, cond,valeur_cond,nb_temoins,id){
case<-data[(!is.na(case_cond) & case_cond==1 & cond==valeur_cond),id]
pop<-data[(!is.na(case_cond) & case_cond==0 & cond==valeur_cond),id]
control<-NA
for (i in 1:length(case)){
Usample<-sample(pop,nb_temoins,replace=F)
if (i==1){
control<-Usample
}else{
control<-c(control,Usample)
}
j<-1
for (j in 1:nb_temoins){
pop<-pop[(pop != Usample[j])]
}
}
return(control)
}
data<-as.data.frame(c(1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1))
colnames(data)<-"hyperactivity"
data$sex<-c(1,1,2,1,1,2,1,1,1,1,1,2,2,2,1,1,1,1,2,1)
data$id<-seq(1,length(data$hyperactivity))
appariement_cond(data,data$hyperactivity,data$sex,1,2,"id")
library(monpackage)
library(monpackage)
installed.packages("corrplot")
installe.packages("corrplot")
instal.packages("corrplot")
install.packages("corrplot")
install.packages("forestplot")
library(monpackage)
